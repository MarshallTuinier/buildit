# Below we define all of our type definitions for our GraphQL Schema

# GraphQL does not have a default date, so we define one in the resolvers.js file
scalar Date

# shareWith in a folder can be a team, groups, or members, so  we can't definte
# the type since there is no polymorphism in graphQL. so we need do define another new
# scalar, calling this one JSON to be used in the Folder type

scalar JSON

type Query {
  getTeam: Team
  getFolders(parent: String): [Folder]
  getFolder(id: String!): Folder
}

type Folder {
  id: String
  name: String
  parent: String
  description: String
  shareWith: [JSON]
}

type Team {
  id: String
  name: String
}

type Mutation {
  captureEmail(email: String!): User
  signup(
    id: String!
    firstname: String!
    lastname: String!
    password: String!
  ): AuthPayload!
  login(email: String!, password: String!): AuthPayload!
}

type User {
  id: String
  name: String
  firstname: String
  lastname: String
  email: String
  avatarColor: String
  jobTitle: String
  team: String
  role: String
  status: String
  createdAt: Date
}

type AuthPayload {
  token: String!
  user: User!
}
